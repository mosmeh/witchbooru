{"version":3,"sources":["webpack:///../src/index.js","webpack:///./routes/home.tsx"],"names":["getHookState","index","type","options","currentComponent","currentHook","hooks","length","push","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","useEffect","callback","args","state","argsChanged","useRef","initialValue","useMemo","current","factory","flushAfterPaintEffects","afterPaintEffects","forEach","component","invokeCleanup","invokeEffect","e","hook","comp","oldArgs","newArgs","some","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb","useEventListener","event","handler","handlerRef","listener","window","addEventListener","removeEventListener","MIME_TYPES","Home","file","setFile","url","setUrl","preventDefault","dataTransfer","dropEffect","files","includes","getData","trim","className","onSubmit","route","baseroute","history","replaceState","requestData","label","icon","color","accept","join","filenames","name","onChange","target","HTMLInputElement","placeholder","value","onInput"],"mappings":"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","file":"route-home.chunk.8309b.esm.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { h, Fragment, FunctionalComponent, JSX } from 'preact';\nimport { useState, useRef, useEffect } from 'preact/hooks';\nimport { route } from 'preact-router';\nimport {\n    FileInput,\n    Field,\n    TextInput,\n    Button,\n    Control,\n    HorizontalGroup,\n} from 'preact-bulma';\nimport { baseroute } from '../baseroute';\n\nconst MIME_TYPES = ['image/gif', 'image/jpeg', 'image/png', 'image/bmp'];\n\nconst Home: FunctionalComponent = () => {\n    const [file, setFile] = useState<File | null>(null);\n    const handleFileChange = (e: JSX.TargetedEvent) => {\n        if (!(e.target instanceof HTMLInputElement)) {\n            return;\n        }\n\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            setFile(files[0]);\n        }\n    };\n\n    const [url, setUrl] = useState('');\n    const handleUrlInput = (e: JSX.TargetedEvent) => {\n        if (!(e.target instanceof HTMLInputElement)) {\n            return;\n        }\n        setUrl(e.target.value);\n    };\n\n    const handleSubmit = (e: JSX.TargetedEvent) => {\n        e.preventDefault();\n        route(`${baseroute}/result/`);\n        history.replaceState(\n            {\n                requestData: { file, url },\n            },\n            ''\n        );\n    };\n\n    useEventListener('dragover', (e) => {\n        e.preventDefault();\n        if (e.dataTransfer) {\n            e.dataTransfer.dropEffect = 'copy';\n        }\n    });\n\n    useEventListener('drop', (e) => {\n        e.preventDefault();\n        if (!e.dataTransfer) {\n            return;\n        }\n\n        const files = e.dataTransfer.files;\n        if (files.length > 0 && MIME_TYPES.includes(files[0].type)) {\n            setFile(files[0]);\n        }\n\n        const url = e.dataTransfer.getData('text').trim();\n        if (url !== '') {\n            setUrl(url);\n        }\n    });\n\n    return (\n        <>\n            <div className=\"block\">\n                <p>\n                    <strong>5,800+</strong> general tags\n                </p>\n                <p>\n                    <strong>5,000+</strong> characters\n                </p>\n            </div>\n            <div className=\"container is-max-desktop\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"block\">\n                        <HorizontalGroup label=\"Upload\">\n                            <Field>\n                                <Control>\n                                    <FileInput\n                                        label=\"Choose a file\"\n                                        icon=\"fas fa-upload\"\n                                        color=\"info\"\n                                        accept={MIME_TYPES.join(',')}\n                                        filenames={[\n                                            file?.name ?? 'No file selected',\n                                        ]}\n                                        onChange={handleFileChange}\n                                    />\n                                </Control>\n                            </Field>\n                        </HorizontalGroup>\n                    </div>\n                    <div className=\"block\">\n                        <HorizontalGroup label=\" \">or</HorizontalGroup>\n                    </div>\n                    <div className=\"block\">\n                        <HorizontalGroup label=\"From URL\">\n                            <Field>\n                                <Control>\n                                    <TextInput\n                                        type=\"url\"\n                                        placeholder=\"URL\"\n                                        value={url}\n                                        onInput={handleUrlInput}\n                                    />\n                                </Control>\n                            </Field>\n                        </HorizontalGroup>\n                    </div>\n                    <div className=\"field is-grouped is-grouped-right\">\n                        <Control>\n                            <Button color=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Control>\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n};\n\nfunction useEventListener<K extends keyof WindowEventMap>(\n    event: K,\n    handler: (event: WindowEventMap[K]) => void\n) {\n    const handlerRef = useRef<(event: WindowEventMap[K]) => void>();\n\n    useEffect(() => {\n        handlerRef.current = handler;\n    }, [handler]);\n\n    useEffect(() => {\n        const listener = (e: WindowEventMap[K]) =>\n            handlerRef.current && handlerRef.current(e);\n        window.addEventListener(event, listener);\n        return () => window.removeEventListener(event, listener);\n    }, [event]);\n}\n\nexport default Home;\n"],"sourceRoot":""}